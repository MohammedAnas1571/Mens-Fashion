<%- include("../partials/admin/header") %>

<div class="main-panel">
  <div class="content-wrapper">
    <div class="page-header">
      <h3 class="page-title">Product Details</h3>
    </div>
    <div class="row">
      <div class="col-md-12 grid-margin stretch-card">
        <div class="card">
          <div class="card-body">
            <h4 class="card-title">Product Information</h4>
            <div class="mb-3"> <a href="/admin/productlist ">Product Details</a>
            </div>
            <form id="productForm" action="/admin/addproduct" method="post" class="forms-sample" enctype="multipart/form-data">
              <% if (message !== "") { %>
              <p class="text-danger"><%= message %></p>
              <% } %>

              <!-- Product Name -->
              <div class="form-group">
                <label for="productName">Product Name</label>
                <input type="text" class="form-control text-black" name="productName" id="productName" placeholder="Name">
                <div id="NameError" style="color: red;"></div>
              </div>

              <!-- Brand Name -->
              <div class="form-group">
                <label for="brandName">Brand Name</label>
                <input type="text" class="form-control text-black" name="brandName" id="brandName" placeholder="Brand Name">
                <div id="brandNameError" style="color: red;"></div>
              </div>

              <!-- Price -->
              <div class="form-group">
                <label for="price">Price</label>
                <input type="number" class="form-control text-black" name="price" id="price" placeholder="Price">
                <div id="priceError" style="color: red;"></div>
              </div>

              <div class="form-group">
                <label for="productName">Offer %</label>
                <input type="text" class="form-control text-black" name="offer" id="offer" placeholder="OfferPrice %">
                <div id="offerError" style="color: red;"></div>
              </div>

              <!-- Stock Count -->
              <div class="form-group">
                <label for="stockCount">Stock </label>
                <input type="number" class="form-control text-black" name="stock" id="stockCount" placeholder="Count">
                <div id="stockError" style="color: red;"></div>
              </div>

              <!-- Description -->
              <div class="form-group">
                <label for="description">Description</label>
                <textarea class="text-black form-control" id="description" name="description" rows="8" placeholder="Write about the Product"></textarea>
                <div id="descriptionError" style="color: red;"></div>
              </div>

              <!-- Product Categories and Tags -->
              <div class="col-md-12 grid-margin stretch-card">
                <div class="card">
                  <div class="card-body">
                    <h4 class="card-title">Product Categories and Tags</h4>
                    <div class="form-group">
                      <label for="category">Category</label>
                      <select class="form-control form-control-lg text-black" name="category" id="category">
                        <% Categories.forEach(category => { %>
                        <% if (category.isBlock===false) { %>
                        <option><%= category.categoryName %></option>
                        <% } %>
                        <% }) %>
                      </select>
                      <div id="catagoryError" style="color: red;"></div>
                      <div id="catagoryError" style="color: red;"></div>
                    </div>

                    <!-- Images Upload -->
                    <div class="form-group">
                      <label>Images Upload (Required: 3)</label>
                      <div class="input-group col-md-12">
                        <input type="file" id="images" multiple name="images" class="form-control file-upload-info">
                      </div>
                      <div id="image-preview-container" class="mt-3"></div>
                      <div id="imageError" style="color: red;"></div>
                    </div>

                    <!-- Color -->
                    <div class="form-group">
                      <label for="color">Color</label>
                      <select class="form-control text-black" name="color" id="color">
                        <option value="-1" disabled>Select</option>
                        <option>White</option>
                        <option>Black</option>
                        <option>Blue</option>
                        <option>Silver</option>
                        <option>Gold</option>
                        <option>Red</option>
                        <option>Gray</option>
                        <option>Yellow</option>
                        <option>Pink</option>
                      </select>
                      <div id="colorError" style="color: red;"></div>
                    </div>

                    <!-- Submit Button -->
                    <button type="submit" class="btn btn-primary mb-2">Submit</button>
                  </div>
                </div>
              </div>
            </form>
            <script>
              const couponForm = document.getElementById("productForm");
              const nameInput = document.getElementById("productName");
              const nameError = document.getElementById("NameError");

              const brandInput = document.getElementById("brandName");
              const brandError = document.getElementById("brandNameError");

              const priceInput = document.getElementById("price");
              const priceError = document.getElementById("priceError");

              const offerInput = document.getElementById("offer");
              const offerError = document.getElementById("offerError");

              const stockInput = document.getElementById("stockCount");
              const stockError = document.getElementById("stockError");

              const descriptionInput = document.getElementById("description");
              const descriptionError = document.getElementById("descriptionError");

              const categoryInput = document.getElementById("category");
              const categoryError = document.getElementById("catagoryError");

              const imagesInput = document.getElementById("images");
              const imagesError = document.getElementById("imageError");

              const colorInput = document.getElementById("color");
              const colorError = document.getElementById("colorError");


              function validateName() {
                if (nameInput.value.trim() === "") {
                  nameError.innerHTML = "Please enter a Product Name!";
                  return false;
                } else {
                  nameError.innerHTML = "";
                  return true;
                }
              }

              function brandNameValidation() {
                if (brandInput.value.trim() === "") {
                  brandError.innerHTML = "Please enter a Brand Name!";
                  return false;
                } else {
                  brandError.innerHTML = "";
                  return true;
                }
              }

              function validatePrice() {
                const priceValue = priceInput.value.trim();

                if (priceValue === "") {
                  priceError.innerHTML = "Please enter a price!";
                  return false;
                }
                if (!/^\d+(\.\d{1,2})?$/.test(priceValue) || parseFloat(priceValue) < 0) {
                  priceError.innerHTML = "Please enter a valid price greater than or equal to 0!";
                  return false;
                }
                priceError.innerHTML = "";
                return true;

              }

              function validateOffer() {
                const offerValue = offerInput.value.trim();

                if (offerValue === "") {
                  offerError.innerHTML = "Please enter an offer price!";
                  return false;
                }

                const offerNumber = parseFloat(offerValue);

                // Check if the offer is a valid number and not less than 0
                if (isNaN(offerNumber) || offerNumber < 0) {
                  offerError.innerHTML = "Please enter a valid offer price greater than or equal to 0!";
                  return false;
                }

                // Check if the offer is greater than 100%
                if (offerNumber > 100) {
                  offerError.innerHTML = "Offer cannot be more than 100%";
                  return false;
                }

                offerError.innerHTML = "";
                return true;
              }

              function validateStock() {
                const stockValue = stockInput.value.trim();

                if (stockValue === "") {
                  stockError.innerHTML = "Please enter a stock count!";
                  return false;
                }

                const stockNumber = parseInt(stockValue);

                // Check if the stock is a valid number and greater than 0
                if (isNaN(stockNumber) || stockNumber <= 0) {
                  stockError.innerHTML = "Please enter a valid stock count greater than 0!";
                  return false;
                }

                stockError.innerHTML = "";
                return true;
              }

              function validateDescription() {
                const descriptionValue = descriptionInput.value.trim();

                if (descriptionValue === "") {
                  descriptionError.innerHTML = "Please enter a description!";
                  return false;
                }

                descriptionError.innerHTML = "";
                return true;
              }

              function validateCategory() {
                const selectedCategory = categoryInput.value.trim();

                if (selectedCategory === "") {
                  categoryError.innerHTML = "Please select a category!";
                  return false;
                }

                categoryError.innerHTML = "";
                return true;
              }

              function validateImages() {
                const selectedFiles = imagesInput.files;

                // Check if the field is empty
                if (selectedFiles.length === 0) {
                  imagesError.innerHTML = "Please select at least one image!";
                  return false;
                }

                // Check if more than three images are selected
                if (selectedFiles.length > 3) {
                  imagesError.innerHTML = "Please select only up to three images!";
                  return false;
                }

                imagesError.innerHTML = "";
                return true;
              }



              function validateColor() {
                const selectedColor = colorInput.value.trim();

                if (selectedColor === "" || selectedColor === "-1") {
                  colorError.innerHTML = "Please select a color!";
                  return false;
                }

                colorError.innerHTML = "";
                return true;
              }

              couponForm.addEventListener("submit", function(event) {
                event.preventDefault();
                const validations = [
                  validateColor(), validateImages(), validateCategory(), validateDescription(), validateStock(), validateOffer(), validatePrice(),
                  brandNameValidation(), validateName()
                ];
                const hasErrors = validations.some(validation => validation === false);
                if (!hasErrors) {
                  couponForm.submit(); // Trigger the form submission
                }
              });


              function handleImagePreview(input) {
                const container = document.getElementById('image-preview-container');
                container.innerHTML = ''; // Clear previous previews

                if (input.files) {
                  Array.from(input.files).forEach((file) => {
                    const reader = new FileReader();

                    reader.onload = function(e) {
                      const preview = document.createElement('div');
                      preview.className = 'image-preview';

                      const image = document.createElement('img');
                      image.src = e.target.result;
                      image.className = 'img-thumbnail';
                      preview.appendChild(image);

                      container.appendChild(preview);
                    };

                    reader.readAsDataURL(file);
                  });
                }
              }

              document.getElementById('images').addEventListener('change', function() {
                handleImagePreview(this);
              });
            </script>

            <style>
              .image-preview {
                display: inline-block;
                margin-right: 10px;
                width: 100px;
                /* Set the desired width */
                height: 100px;
                /* Set the desired height */
                position: relative;
              }

             
            </style>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>